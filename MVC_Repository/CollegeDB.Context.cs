//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace MVC_Repository
{
    using System;
    using System.Data.Entity;
    using System.Data.Entity.Infrastructure;
    using System.Data.Entity.Core.Objects;
    using MVC_Model;
    using System.Linq;
    
    public partial class CollegeEntities : DbContext
    {
        public CollegeEntities()
            : base("name=CollegeEntities")
        {
        }
    
        protected override void OnModelCreating(DbModelBuilder modelBuilder)
        {
            throw new UnintentionalCodeFirstException();
        }
    
        public virtual DbSet<faculty> faculties { get; set; }
        public virtual DbSet<student> students { get; set; }
        public virtual DbSet<test> tests { get; set; }
    
        public virtual int InUPStudent(Nullable<int> stuid, string sfname, string slname, string semail, string smno, string sdept, Nullable<int> fid, string spass)
        {
            var stuidParameter = stuid.HasValue ?
                new ObjectParameter("stuid", stuid) :
                new ObjectParameter("stuid", typeof(int));
    
            var sfnameParameter = sfname != null ?
                new ObjectParameter("sfname", sfname) :
                new ObjectParameter("sfname", typeof(string));
    
            var slnameParameter = slname != null ?
                new ObjectParameter("slname", slname) :
                new ObjectParameter("slname", typeof(string));
    
            var semailParameter = semail != null ?
                new ObjectParameter("semail", semail) :
                new ObjectParameter("semail", typeof(string));
    
            var smnoParameter = smno != null ?
                new ObjectParameter("smno", smno) :
                new ObjectParameter("smno", typeof(string));
    
            var sdeptParameter = sdept != null ?
                new ObjectParameter("sdept", sdept) :
                new ObjectParameter("sdept", typeof(string));
    
            var fidParameter = fid.HasValue ?
                new ObjectParameter("fid", fid) :
                new ObjectParameter("fid", typeof(int));
    
            var spassParameter = spass != null ?
                new ObjectParameter("spass", spass) :
                new ObjectParameter("spass", typeof(string));
    
            return ((IObjectContextAdapter)this).ObjectContext.ExecuteFunction("InUPStudent", stuidParameter, sfnameParameter, slnameParameter, semailParameter, smnoParameter, sdeptParameter, fidParameter, spassParameter);
        }
    }
}
